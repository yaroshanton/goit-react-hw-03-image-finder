{"version":3,"sources":["services/PhotosApi.js","components/Notification/Notification.js","components/Searchbar/Searchbar.js","components/ImageGallery/ImageGallery.js","components/ImageGalleryItem/ImageItem.js","components/ImageGalleryItem/ImageGalleryItem.js","components/Button/Button.js","components/Loader/Loader.js","components/Modal/Modal.js","components/App.js","index.js"],"names":["query","page","axios","get","then","res","data","hits","Notification","message","Searchbar","state","inputValue","handleChange","e","setState","target","value","handleSubmit","preventDefault","props","onSubmit","className","this","type","autoComplete","autoFocus","placeholder","onChange","Component","ImageGallery","children","ImageItem","onClickImg","largeImg","image","largeImageURL","webformatURL","onClick","src","alt","ImageGalleryItem","onClickImage","photos","map","photo","id","Button","App","color","height","width","timeout","Modal","onClose","error","serchQuery","loading","disabled","closeModalWindow","code","window","removeEventListener","fetchPhotos","PhotosApi","prevState","scrollTo","top","document","documentElement","scrollHeight","behavior","catch","console","log","finally","handleFormSubmit","handlerModalWindow","prevProps","addEventListener","length","ReactDOM","render","querySelector"],"mappings":"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","file":"static/js/main.83831554.chunk.js","sourcesContent":["import axios from 'axios'\n\nconst fetchWithQuery = (query, page = 1) => {\n    return axios\n        .get(`https://pixabay.com/api/?q=${query}&page=${page}&key=18828859-930db298be4f18593f67074f1&image_type=photo&orientation=horizontal&per_page=12`)\n        .then(res => res.data.hits);\n};\n\n// eslint-disable-next-line import/no-anonymous-default-export\nexport default { fetchWithQuery };\n","import React from 'react';\nimport PropTypes from 'prop-types'\n\nexport default function Notification(message) {\n    return (\n        <p>{message}</p>\n    );\n}\n\nNotification.propTypes = {\n    message: PropTypes.string,\n};\n","import React, { Component } from 'react'\n\nexport default class Searchbar extends Component {\n    state = {\n        inputValue: '',\n    }\n\n    handleChange = e => {\n        this.setState({\n            inputValue: e.target.value,\n        })\n    }\n\n    handleSubmit = e => {\n        e.preventDefault();\n\n        this.props.onSubmit(this.state.inputValue)\n        this.setState({\n            inputValue: ''\n        })\n    }\n\n    render() {\n        return (\n            <header className=\"Searchbar\">\n                <form className=\"SearchForm\" onSubmit={this.handleSubmit}>\n                    <button type=\"submit\" className=\"SearchForm-button\">\n                        <span className=\"SearchForm-button-label\">Search</span>\n                    </button>\n\n                    <input\n                        className=\"SearchForm-input\"\n                        type=\"text\"\n                        autoComplete=\"off\"\n                        autoFocus\n                        placeholder=\"Search images and photos\"\n                        value={this.state.inputValue}\n                        onChange={this.handleChange}\n                    />\n                </form>\n            </header>\n        )\n    }\n}","import React from 'react'\nimport PropTypes from 'prop-types'\n\nexport default function ImageGallery({ children }) {\n    return (\n        <>\n            <ul className=\"ImageGallery\">\n                {children}\n            </ul>\n        </>\n    )\n}\n\nImageGallery.propTypes = {\n    children: PropTypes.element.isRequired\n}","import React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\n\nexport default class ImageItem extends Component {\n    static propTypes = {\n        largeImg: PropTypes.func.isRequired,\n        image: PropTypes.object.isRequired,\n    };\n\n    onClickImg = () => {\n        const { largeImg } = this.props;\n        const { largeImageURL } = this.props.image;\n\n        largeImg(largeImageURL);\n    };\n\n    render() {\n        const { webformatURL } = this.props.image;\n        return (\n            <li onClick={this.onClickImg} className=\"ImageGalleryItem\">\n                <img src={webformatURL} alt=\"\" className=\"ImageGalleryItem-image\" />\n            </li>\n        );\n    }\n}","import React, { Component } from \"react\";\nimport ImageItem from \"./ImageItem\";\nimport PropTypes from \"prop-types\";\n\nexport default class ImageGalleryItem extends Component {\n    static propTypes = {\n        largeImg: PropTypes.func.isRequired,\n        images: PropTypes.array.isRequired\n    };\n\n    onClickImage = () => {\n        this.props.largeImg();\n    };\n\n    render() {\n        const { photos, largeImg } = this.props;\n        return (\n            <ul className=\"ImageGallery\">\n                {photos.map((photo) => {\n                    return <ImageItem image={photo} largeImg={largeImg} key={photo.id} />;\n                })}\n            </ul>\n        );\n    }\n}","import React from 'react';\nimport PropTypes from 'prop-types'\n\nexport default function Button({ onClick }) {\n    return (\n        <button className=\"Button\" type=\"button\" onClick={onClick}> Load more </button>\n    );\n}\n\nButton.propTypes = {\n    onClick: PropTypes.func.isRequired,\n}","import React, { Component } from 'react'\nimport \"react-loader-spinner/dist/loader/css/react-spinner-loader.css\";\nimport Loader from \"react-loader-spinner\";\nimport './loader.css'\n\n\nexport default class App extends Component {\n    render() {\n        return (\n            <Loader className=\"loader\"\n                type=\"ThreeDots\"\n                color=\"#3f51b5\"\n                height={100}\n                width={100}\n                timeout={5000}\n            />\n        );\n    }\n}","import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nfunction Modal({ onClose, children }) {\n    return (\n        <div className=\"Overlay\" id=\"overlay\" onClick={onClose}>\n            <div className=\"Modal\">\n                {children}\n            </div>\n        </div>\n    );\n}\n\nModal.propTypes = {\n    onClose: PropTypes.func.isRequired\n};\n\nexport default Modal;","import React, { Component } from 'react'\nimport PhotosApi from '../services/PhotosApi'\nimport Notification from './Notification/Notification'\nimport Searchbar from './Searchbar/Searchbar'\nimport ImageGallery from './ImageGallery/ImageGallery'\nimport ImageGalleryItem from './ImageGalleryItem/ImageGalleryItem'\nimport Button from './Button/Button'\nimport Loader from './Loader/Loader'\nimport Modal from './Modal/Modal'\nimport './styles.css'\n\n// rfc\n\nexport default class App extends Component {\n    state = {\n        photos: '',\n        error: null,\n        serchQuery: '',\n        page: 1,\n        loading: false,\n        disabled: false,\n        largeImageURL: null\n    }\n\n\n    componentDidUpdate(prevProps, prevState) {\n        const prevQuery = prevState.serchQuery;\n        const nextQuery = this.state.serchQuery;\n\n        if (prevQuery !== nextQuery) {\n            this.fetchPhotos();\n        }\n\n        if (\n            prevState.largeImageURL !== this.state.largeImageURL &&\n            this.state.largeImageURL\n        ) {\n            this.setState({ disabled: true });\n            window.addEventListener(\"keydown\", this.closeModalWindow);\n        }\n    }\n\n    closeModalWindow = (e) => {\n        if (e.code === 'Escape' || e.target.id === 'overlay') {\n            this.setState({ disabled: false, largeImageURL: null });\n            window.removeEventListener(\"keydown\", this.closeModalWindow);\n        }\n    }\n\n    fetchPhotos = () => {\n        const { serchQuery, page } = this.state\n\n        this.setState({\n            loading: true\n        })\n\n        PhotosApi.fetchWithQuery(serchQuery, page)\n            .then((photos) => {\n                this.setState(prevState => {\n                    return {\n                        photos: [...prevState.photos, ...photos],\n                        page: prevState.page + 1\n                    };\n                });\n                window.scrollTo({\n                    top: document.documentElement.scrollHeight - 973,\n                    behavior: \"smooth\",\n                });\n            })\n            .catch(error => console.log(error))\n            .finally(() => this.setState({ loading: false }))\n    }\n\n    handleFormSubmit = query => {\n        this.setState({\n            serchQuery: query, page: 1, photos: []\n        })\n    }\n\n    handlerModalWindow = (largeImageURL) => {\n        this.setState({ largeImageURL });\n    };\n\n    render() {\n\n        const { photos, error, loading, disabled, largeImageURL } = this.state\n\n        return (\n            <>\n                {error && <Notification message={`Whoops, something went wrong: ${error.message}`} />}\n                <Searchbar onSubmit={this.handleFormSubmit} />\n                {photos.length > 0 && <ImageGallery>\n                    <ImageGalleryItem photos={photos} largeImg={this.handlerModalWindow} />\n                </ImageGallery>}\n                {photos.length > 0 && !loading && <Button onClick={this.fetchPhotos} />}\n                {loading && <Loader />}\n                {disabled && <Modal onClose={this.closeModalWindow}>\n                    <img src={largeImageURL} alt=\"Large Img\" />\n                </Modal>}\n            </>\n        )\n    }\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App';\nimport './base.css';\n\nReactDOM.render(<App />, document.querySelector('#root'));"],"sourceRoot":""}